@*
    PlayerLeftView: formats players to the left of the board.
*@

@model AspNetCoreWebApplication.Models.Player

    <div class="col-5 d-flex pl-0">
        <img src=@Model.PlayerImg class="playerimg rounded-circle" />
    </div>
    <div class="col-7">
        <div class="row mt-2 mb-2">
            <div class="col-5 pl-0">
                <div class="playername pokerfont text-left">@Model.PlayerName</div>
            </div>
            <div class="col-7">
                <div class="stake text-right">$ @Model.Stake.ToString()</div>
            </div>
        </div>

        @{
            string suitstyle = "";
            string offsetcard = "";
            string cardback = "cardback";
            int boardcounter = 0;
            int pocketcounter = 0;

            List<Card> cards = Model._hand._cardsInHand.OrderBy(x => x.CardRank).Reverse().ToList();

            <div class="row align-items-center pl-2">
                @* Put cards in pocket *@
                <div class="col-6 cardrow">
                    @foreach (Card card in cards)
                    {
                        if (card.IsFaceDown)
                        {
                            pocketcounter++;
                            offsetcard = "carddown-" + pocketcounter.ToString();
                            <div id="gamecard" class="card @offsetcard @cardback">
                                @card.BackSym
                            </div>
                        }
                    }
                </div>

                @* Put cards on board *@
                <div class="col-6 cardrow pr-0">
                    @foreach (Card card in cards)
                    {
                        if (!card.IsFaceDown)
                        {
                            boardcounter++;
                            offsetcard = "cardup-" + boardcounter.ToString();

                            suitstyle = (card.Suit.Equals(Card.CardSuitValue.Clubs) || card.Suit.Equals(Card.CardSuitValue.Spades)) ? "clubsspades" : "heartsdiamonds";

                            <div id="gamecard" class="card @suitstyle @offsetcard">
                                @card.RankSym
                                <br />
                                @card.DisplaySuitSym
                            </div>
                        }
                    }
                </div>

            </div>
        }

        @{
            var ranking = Model._hand._handRank + " (" + @Model._hand._handScore.ToString() + ")";
        }
        <div class="row mt-2">
            <div class="col handrank text-left px-0"><p>@ranking</p></div>
        </div>
    </div>

